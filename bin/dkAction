#! /bin/bash
##########################################################################################
# Script de gestion d'actions diverses avec docker dans l'environnement ACT-Dev
#
#                                                                     FS 15-11-2018, 16:21
#                                                                     FS 18-10-2021, 01:12
##########################################################################################
# À voir
#   -> …
##########################################################################################


# bibliothèque de fonctions
###############################

usage() {
    if [ "$1" == "-h" ]; then
        echo "Script de gestion d'actions diverses avec docker dans ACT-Dev."
        echo "Usage: ${0##*/}"
        echo "          up | start | stop | down |"
        echo "          contPhpJumpIn | contMariaDBJumpIn | contApacheJumpIn | contPhpMyAdminJumpIn |"
        echo "          install | clean | purge |"
        echo "          bye"
        echo "Au revoir..."
        exit 1
    fi
}

testCmdeValide() {
    for cmde in \
        "up" "start" "stop" "down" \
        "contPhpJumpIn" "contMariaDBJumpIn" "contApacheJumpIn" "contPhpMyAdminJumpIn" \
        "install" "clean" "purge" \
        "bye"
    do
        if [ -z "${cmde#"$1"}" ]; then return 1; fi
    done
    return 0
}

testConfigValide() {
    if [[ -z $ACT_Dev_BASE ]]; then
        echo "La première configuration d'ACT-Dev ne semble pas avoir été effectuée :" \
             "avant de pouvoir utiliser l'environnement de développement ACT-Dev,"\
             "la commande « dkConfig install » doit d'abord être exécutée" \
             "à partir du répertoire bin dans le projet ACT-Dev."
        memoChemin=`pwd`
        if [[ -d bin ]]; then cd ./bin; fi
        if [[ -f dkConfig ]]; then
            echo "Voulez-vous exécuter dkConfig install immédiatement ?"
            read -p "O pour confirmer : " confirmation
            if [[ "${confirmation:0:1}" == "O" || "${confirmation:0:1}" == "o" ]]; then
                echo "Attention : il faudra recharger manuellement les variables d'environnement."
                . ./dkConfig install
            fi
        fi
        cd $memoChemin
        return 1
    else
        return 0
    fi
}



##########################################################################################
# Partie principale
##########################################################################################

usage $*
if testConfigValide ; then
    if testCmdeValide $1; then
        echo "Veuillez choisir quelle action lancer :"
        echo "    1  - Regénérer les conteneurs principaux              -> up"
        echo "    2  - Démarrer les conteneurs principaux               -> start"
        echo "    3  - Arrêter les conteneurs principaux                -> stop"
        echo "    4  - Down pour les conteneurs principaux              -> down"
        echo "   10  - Rentrer dans cci-dev_php-fpm                     -> contPhpJumpIn"
        echo "   11  - Rentrer dans cci-dev_mariadb                     -> contMariaDBJumpIn"
        echo "   12  - Rentrer dans cci-dev_httpd                       -> contApacheJumpIn"
        echo "   13  - Rentrer dans cci-dev_phpmyadmin                  -> contPhpMyAdminJumpIn"
        echo "   50  - Première configuration                           -> install"
        echo "   51  - Nettoyage de l'inutile dans docker               -> clean"
        echo "   52  - Purger totalement docker                         -> purge"
        echo "    0  - Rien !"
        read -p "Votre choix : " cmde
        case "$cmde" in
             1) cmde="up"                   ;;
             2) cmde="start"                ;;
             3) cmde="stop"                 ;;
             4) cmde="down"                 ;;
            10) cmde="contPhpJumpIn"        ;;  
            11) cmde="contMariaDBJumpIn"    ;;
            12) cmde="contApacheJumpIn"     ;;
            13) cmde="contPhpMyAdminJumpIn" ;;
            50) cmde="install"              ;;
            51) cmde="clean"                ;;
            52) cmde="purge"                ;;
            *)  cmde="bye"                  ;;
        esac
        echo -e "\r"
    else
        cmde=$1
        shift
    fi
    case "$cmde" in
        "up")
                echo "Regénération des conteneurs"
                docker-compose -f "$CCI_dev_BASE/src/docker-compose.yml" build --pull
                docker-compose -f "$CCI_dev_BASE/src/docker-compose.yml" up -d
            ;;
        "start")
                echo "Lancement des conteneurs docker"
                docker start cci-dev_mariadb cci-dev_httpd cci-dev_php-fpm
            ;;
        "stop")
                echo "Arrêt des conteneurs docker"
                docker stop cci-dev_mariadb cci-dev_httpd cci-dev_php-fpm
            ;;
        "down")
                echo "Down pour les conteneurs"
                docker-compose -f $CCI_dev_BASE/src/docker-compose.yml down
            ;;
        "contPhpJumpIn")
                docker exec -it cci-dev_php-fpm /bin/bash
            ;;
        "contMariaDBJumpIn")
                docker exec -it cci-dev_mariadb /bin/bash
            ;;
        "contApacheJumpIn")
                docker exec -it cci-dev_httpd /bin/bash
            ;;
        "contPhpMyAdminJumpIn")
                docker exec -it cci-dev_phpmyadmin /bin/bash
            ;;
        "clean") # Nettoyage de l'inutile dans docker
                echo "Nettoyage de Docker…"
                docker container prune -f
                docker image prune -f
                docker volume prune -f
                docker network prune -f
            ;;
        "purge") # Supprimer tout dans docker
                echo "Faut-il vraiment tout supprimer dans docker ?"
                read -p "O pour confirmer, Ov pour confirmer avec suppression des volumes : " confirmation
                if [[ "${confirmation:0:1}" == "O" ]]; then
                    docker stop $(docker ps -a -q)
                    docker rm -f $(docker ps -a -q)
                    docker rmi -f $(docker images -q)
                    docker network rm $(docker network ls -f type=custom -q)
                    if [ "$confirmation" == "Ov" ]; then
                        docker volume rm $(docker volume ls -q)
                    fi
                    echo "Docker est totalement vide, maintenant…"
                else
                    echo "Ouf…"
                fi
            ;;
        "bye")  echo "Au revoir..." ;;
        *)      echo "--> Attention : je ne sais pas quoi faire avec $cmde,"
                echo "      donc je m'en vais !" ;;
    esac
fi